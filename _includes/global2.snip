VALUE global;

VALUE global_getter(ID id)
{
	/* return some VALUE, probably based on global */
}

void global_setter(VALUE val, ID id)
{
	/* set global, probably based on val */
}

void some_func()
{
	/* ... */

	/* initialize global first! */

	/* $x can be changed freely in Ruby */
	rb_define_varialbe("$x", &global);

	/* $y can be read in Ruby, but changing it will raise NameError */
	rb_define_readonly_variable("$y", &global);

	/* $z can be freely changed in Ruby, but through the specified functions */
	rb_define_hooked_variable("$z", &global, global_getter, global_setter);

	/* ... */
}
