VALUE dangerous_func(VALUE obj)
{
	/* code that could raise an exception */
	return obj;
}

VALUE ensure_func(VALUE obj)
{
	/* stuff to always run after dangerous_func */
	return obj;
}

// wrap rb_ensure so we can rescue an exception
VALUE begin_func(VALUE obj)
{
	return rb_ensure(dangerous_func, obj, ensure_func, obj);
}

VALUE rescue_func(VALUE obj)
{
	VALUE exception = rb_errinfo();
	rb_set_errinfo(Qnil);

	/* do something with exception */
	return obj;
}

void some_function()
{
	ruby_init();

	rb_rescue(begin_func, Qnil, rescue_func, Qnil);

	ruby_cleanup(0);
}
